Support Ticket creator (currently broken)

/*  if(message.channel.type !== 'text') {

        let active = await db.fetch(`support_${message.author.id}`);
        let guild = bot.guilds.get("guildID");

        let channel, found = true;

        try {
            if(active) bot.channels.get(active.channelID).guild;
        }catch (e) {
            found = false;
        }
        if(!active || !found){
            active = {};

            channel = await guild.channels.create(`${message.author.username}-${message.author.discriminator}`, {
                parent: '486176833134657537',
                topic: `?complete to close the ticket | Support for ${message.author.tag} | ID: ${message.author.id}`
            });

            let author = message.author;
            const newChannel = new Discord.MessageEmbed()
                .setColor(0x36393e)
                .setAuthor(author.tag, author.displayAvatarURL())
                .setFooter('Support Ticket Created')
                .addField('User', author)
                .addField('ID', author.id);

            await channel.send(newChannel);

            const newTicket = new Discord.MessageEmbed()
                .setColor(0x36393e)
                .setAuthor(`Hello, ${author.tag}`, author.displayAvatarURL())
                .setFooter('Support Ticket Created');

            await author.send(newTicket);

            active.channelID = channel.id;
            active.targetID = author.id;


        }
        channel = bot.channels.get(active.channelID);

        const dm = new Discord.MessageEmbed()
            .setColor(0x36393e)
            .setAuthor(`Thank you, ${message.author.tag}`, message.author.displayAvatarURL())
            .setFooter(`Your message has been sent -- A staff member will be in contact soon`);

        await message.author.send(dm);

        const embedRec = new Discord.MessageEmbed()
            .setColor(0x36393e)
            .setAuthor(message.author.tag, message.author.displayAvatarURL())
            .setDescription(message.content)
            .setFooter(`Message Received -- ${message.author.tag}`);

        await message.author.send(embedRec);

        db.set(`support_${message.author.id}`, active);
        db.set(`supportChannel_${channel.id}`, message.author.id);
        return;

    }

    let support = await db.fetch(`supportChannel_${message.channel.id}`);

    if(support) {
        support = await db.fetch(`support_${support}`);

        let supportUser = bot.users.get(support.targetID);
        if(!supportUser) return message.channel.delete();

        if(message.content.toLowerCase() === '?complete') {
            const complete = new Discord.MessageEmbed()
                .setColor(0x36393e)
                .setAuthor(`Hey, ${supportUser.tag}`, supportUser.displayAvatarURL())
                .setFooter(`Ticket Closed -- GameVsPlayer Discord`)
                .setDescription('*Your ticket has been marked as **complete**. If you wish to reopen this, or create a new one, please send a message to the bot.*');

        supportUser.send(complete);

        message.channel.delete();

        db.delete(`support_${support.targetID}`);

        }
        const embedRec = new Discord.MessageEmbed()
            .setColor(0x36393e)
            .setAuthor(message.author.tag, message.author.displayAvatarURL())
            .setFooter(`Message Received -- GameVsPlayer Discord`)
            .setDescription(message.content);

        bot.users.get(support.targetID).send(embedRec);

        message.delete({timeout: 1000});

        embedRec.setFooter(`Message Sent -- ${supportUser.tag}`).setDescription(message.content);

        return message.channel.send(embed);
    }
*/